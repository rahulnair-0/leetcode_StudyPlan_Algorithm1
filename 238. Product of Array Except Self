class Solution {
public:
    std::vector<int> productExceptSelf(std::vector<int>& nums) {
        int n = nums.size();
        std::vector<int> prefix(n, 1);
        std::vector<int> suffix(n, 1);
        int prefix_product = 1;
        for (int i = 0; i < n; i++) {
            prefix[i] = prefix_product;
            prefix_product *= nums[i];
        }
        int suffix_product = 1;
        for (int i = n - 1; i >= 0; i--) {
            suffix[i] = suffix_product;
            suffix_product *= nums[i];
        }
        std::vector<int> answer(n);
        for (int i = 0; i < n; i++) {
            answer[i] = prefix[i] * suffix[i];
        }

        return answer;
    }
};
